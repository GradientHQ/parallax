[build-system]
requires = ["setuptools>=68", "wheel", "poetry-core"]
build-backend = "poetry.core.masonry.api"


[project]
name = "parallax"
version = "0.0.1"
description = "Decentralised pipeline-parallel LLM serving with Sglang + MLX-LM + Lattica"
readme = "README.md"
requires-python = ">=3.11"
packages = [
  { include = "parallax", from = "src" },
  { include = "scheduling", from = "src" },
  { include = "parallax_utils", from = "src" },
]

dependencies = [
  "msgpack>=1.0.7",
  "safetensors>=0.5.1",
  "numpy>=1.26",
  "pyzmq>=25.0",
  "psutil>=5.9.5",
  "httpx[socks]>=0.26.0",
  "aiohttp",
  "uvicorn",
  "uvloop",
  "fastapi",
  "pydantic",
  "protobuf==6.31.1",
  "dijkstar==2.6.0",
  "lattica==1.0.3",
]

[project.scripts]
parallax = "parallax.cli:main"

[project.optional-dependencies]

mac = [
  "torch==2.8.0",
  "mlx-lm==0.28.0",
  "mlx==0.29.1",
]

gpu = [
  "mlx-lm==0.28.0",
  "mlx[cpu]==0.29.1",
  "sglang[all]==0.5.2",
]

benchmark = [
  "transformers",
  "tqdm",
  "datasets",
  "pillow",
  "modelscope",
]

dev = [
  "black>=24.3",
  "ruff>=0.4",
  "pytest>=8.2",
  "pytest-mock>=3.14",
  "pytest-cov>=5.0",
  "pre-commit>=3.2",
]

[tool.setuptools.packages.find]
where = ["src"]                # put your code under ./src/â€¦

[tool.black]
line-length = 100

[tool.isort]
profile = "black"

[tool.ruff]
ignore = ["E501"]              # line length handled by Black
line-length = 100
