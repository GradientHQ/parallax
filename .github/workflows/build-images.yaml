name: Build Images

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    paths:
      - 'docker/**'
      - 'src/**'
      - 'pyproject.toml'
      - 'README.md'


env:
  IMAGE_NAME: ${{ github.repository }}
  NAMESPACE: gradient

jobs:
  build:
    runs-on: arc-runner-set-parallax
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        variant: [blackwell, hopper]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        endpoint: tcp://buildkit-buildkit-service:1234


    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ALIYUN_ACR }}
        username: ${{ secrets.ALIYUN_ACR_USERNAME }}
        password: ${{ secrets.ALIYUN_ACR_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.ALIYUN_ACR }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch,suffix=-${{ matrix.variant }}
          type=ref,event=pr,suffix=-${{ matrix.variant }}
          type=raw,value=latest-${{ matrix.variant }},enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.${{ matrix.variant }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true
